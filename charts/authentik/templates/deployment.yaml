{{- range $component := list "server" "worker" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" (include "common.names.fullname" $) . }}
  labels:
    {{- include "common.labels" $ | nindent 4 }}
    app.kubernetes.io/component: "{{ $component }}"
spec:
  {{- if eq . "server" }}
  replicas: {{ $.Values.replicas }}
  {{- else }}
  replicas: {{ $.Values.worker.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.labels.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: "{{ $component }}"
  template:
    metadata:
      labels:
        {{- include "common.labels.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: "{{ $component }}"
        app.kubernetes.io/version: "{{ $.Values.image.tag }}"
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with $.Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.fullname" $ }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      enableServiceLinks: true
      {{- if $.Values.initContainers }}
      initContainers:
        {{- $initContainers := list }}
        {{- range $index, $key := (keys $.Values.initContainers | uniq | sortAlpha) }}
          {{- $container := get $.Values.initContainers $key }}
          {{- if not $container.name -}}
            {{- $_ := set $container "name" $key }}
          {{- end }}
          {{- $initContainers = append $initContainers $container }}
        {{- end }}
        {{- tpl (toYaml $initContainers) $ | nindent 8 }}
      {{- end }}
      {{- if eq $component "server" }}
      priorityClassName: {{ $.Values.priorityClassName }}
      {{- with $.Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      priorityClassName: {{ $.Values.worker.priorityClassName }}
      {{- with $.Values.worker.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ $.Chart.Name }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}{{- if $.Values.image.digest -}}@{{ $.Values.image.digest }}{{- end -}}"
          imagePullPolicy: "{{ $.Values.image.pullPolicy }}"
          args:
            - {{ $component | quote }}
          env:
            {{- range $k, $v := $.Values.env }}
            - name: {{ quote $k }}
              value: {{ quote $v }}
            {{- end }}
            {{- include "authentik.env" (dict "root" $ "values" $.Values.authentik) | indent 12 }}
            {{- range $name, $val := $.Values.envValueFrom }}
            - name: {{ $name }}
              valueFrom:
                {{- toYaml $val | nindent 16 }}
            {{- end }}
          {{- with $.Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          volumeMounts:
            {{- if $.Values.geoip.enabled }}
            - name: geoip-db
              mountPath: /geoip
            {{- end }}
            
            {{- if $.Values.sidecar.blueprints.enabled }}
            - name: sidecar-blueprints
              mountPath: /blueprints/sidecar
            {{- end }}
            
            {{- range $name := $.Values.blueprints }}
            - name: blueprints-{{ $name }}
              mountPath: /blueprints/mounted/{{ $name }}
            {{- end }}

            {{- with $.Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          {{- if eq $component "server" }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
            - name: http-metrics
              containerPort: 9300
              protocol: TCP
            - name: https
              containerPort: 9443
              protocol: TCP
          {{- with $.Values.livenessProbe }}
          {{- if .enabled }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with $.Values.readinessProbe }}
          {{- if .enabled }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- end }}{{/* end server */}}

          {{- with (get $.Values.resources $component) }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if $.Values.geoip.enabled }}
        - name: geoip-sidecar
          image: "{{ $.Values.geoip.image }}"
          env:
            - name: GEOIPUPDATE_FREQUENCY
              value: {{ $.Values.geoip.updateInterval | quote }}
            - name: GEOIPUPDATE_PRESERVE_FILE_TIMES
              value: "1"
            - name: GEOIPUPDATE_ACCOUNT_ID
              value: {{ required "geoip account id required" $.Values.geoip.accountId | quote }}
            - name: GEOIPUPDATE_LICENSE_KEY
              value: {{ required "geoip license key required" $.Values.geoip.licenseKey | quote }}
            - name: GEOIPUPDATE_EDITION_IDS
              value: {{ required "geoip edition id required" $.Values.geoip.editionIds | quote }}
          volumeMounts:
            - name: geoip-db
              mountPath: /usr/share/GeoIP
        {{- end }}
        {{- with $.Values.sidecar.blueprints }}
        {{- if .enabled }}
        - name: sidecar-blueprints
          image: "{{ .image.repository }}:{{ .image.tag }}"
          env:
            - name: "FOLDER"
              value: "/blueprints/sidecar"
            - name: "LABEL"
              value: "goauthentik_blueprint"
            - name: "LABEL_VALUE"
              value: "1"
            {{- with .namespace }}
            - name: "NAMESPACE"
              value: "{{ . }}"
            {{- end }}
            {{- with .resource }}
            - name: "RESOURCE"
              value: "{{ . }}"
            {{- end }}
            {{- with .uniqueFilenames }}
            - name: "UNIQUE_FILENAMES"
              value: "{{ . }}"
            {{- end }}
          volumeMounts:
            - name: sidecar-blueprints
              mountPath: /blueprints/sidecar
        {{- end }}
        {{- end }}
        {{- with $.Values.additionalContainers }}
        {{- $additionalContainers := list }}
        {{- range $name, $container := . }}
          {{- if not $container.name -}}
            {{- $_ := set $container "name" $name }}
          {{- end }}
          {{- $additionalContainers = append $additionalContainers $container }}
        {{- end }}
        {{- tpl (toYaml $additionalContainers) $ | nindent 8 }}
      {{- end }}
      volumes:
        {{- if $.Values.geoip.enabled }}
        - name: geoip-db
          emptyDir: {}
        {{- end }}
        {{- if $.Values.sidecar.blueprints.enabled }}
        - name: sidecar-blueprints
          emptyDir: {}
        {{- end }}
        {{- range $name := $.Values.blueprints }}
        - name: blueprints-{{ $name }}
          configMap:
            name: {{ $name }}
        {{- end }}

        {{- with $.Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        
{{- end }}
